[{"C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\reportWebVitals.js":"1","C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\App.js":"2","C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\calendar\\day1.js":"3","C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\calendar\\day2.js":"4","C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\util.js":"5","C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\index.js":"6"},{"size":362,"mtime":1606970519202,"results":"7","hashOfConfig":"8"},{"size":674,"mtime":1606972864202,"results":"9","hashOfConfig":"8"},{"size":3203,"mtime":1606972408979,"results":"10","hashOfConfig":"8"},{"size":1650,"mtime":1606981639485,"results":"11","hashOfConfig":"8"},{"size":160,"mtime":1606979739523,"results":"12","hashOfConfig":"8"},{"size":500,"mtime":1606970519202,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qg86ud",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\reportWebVitals.js",[],"C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\App.js",[],"C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\calendar\\day1.js",[],"C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\calendar\\day2.js",["27","28"],"import React from \"react\";\r\nimport textInput from \"./day2-input.txt\";\r\nimport {getInput} from \"../util\";\r\n\r\nlet output2 = \"day2\";\r\n\r\nconst transform = (arr) => {\r\n    let transformed = [];\r\n    arr.map(item => {\r\n        let split = item.split(\" \");\r\n        let range = split[0].split(\"-\")\r\n        let obj = {\r\n            min: range[0],\r\n            max: range[1],\r\n            letter: split[1].charAt(0),\r\n            password: split[2]\r\n        }\r\n        transformed.push(obj);\r\n    })\r\n    return transformed;\r\n};\r\n\r\nconst checkString = (min, max, letter, password) => {\r\n    let re = new RegExp(letter, \"g\");\r\n    let count = (password.match(re) || []).length;\r\n    if (count >= min && count <= max) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\n\r\nconst buildList = (arr) => {\r\n    let finalArr = [];\r\n    arr.map(objItem => {\r\n        if (checkString(objItem.min, objItem.max, objItem.letter, objItem.password) === true) {\r\n            finalArr.push(objItem.password)\r\n        }\r\n    })\r\n    return finalArr;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst dayTwoOutput = async () => {\r\n    let tempArray = await getInput(textInput);\r\n    let tempTransform = transform(tempArray);\r\n\r\n    // var temp = \"This is a string.\";\r\n    // var letter = \"s\";\r\n    // var re = new RegExp(letter, \"g\");\r\n    // console.log(re);\r\n    // var count = (temp.match(re) || []).length;\r\n    // console.log(count);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    output2 = buildList(tempTransform);\r\n    console.log(\"answer:\", output2);\r\n};\r\n\r\nconst DayTwo = () => {\r\n\r\n    return (\r\n        <button onClick={()=>dayTwoOutput()}>\r\n            day two\r\n        </button>\r\n    )\r\n}\r\nexport default DayTwo;","C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\util.js",[],"C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\index.js",[],{"ruleId":"29","severity":1,"message":"30","line":9,"column":18,"nodeType":"31","messageId":"32","endLine":9,"endColumn":20},{"ruleId":"29","severity":1,"message":"30","line":35,"column":21,"nodeType":"31","messageId":"32","endLine":35,"endColumn":23},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]
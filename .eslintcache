[{"C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\reportWebVitals.js":"1","C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\App.js":"2","C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\calendar\\day1.js":"3","C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\calendar\\day2.js":"4","C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\util.js":"5","C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\index.js":"6","C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\calendar\\day3.js":"7","C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\calendar\\day4.js":"8"},{"size":362,"mtime":1606970519202,"results":"9","hashOfConfig":"10"},{"size":1227,"mtime":1606995869578,"results":"11","hashOfConfig":"10"},{"size":3259,"mtime":1606995002466,"results":"12","hashOfConfig":"10"},{"size":1917,"mtime":1606995027238,"results":"13","hashOfConfig":"10"},{"size":160,"mtime":1607072871199,"results":"14","hashOfConfig":"10"},{"size":500,"mtime":1606970519202,"results":"15","hashOfConfig":"10"},{"size":2010,"mtime":1607032126158,"results":"16","hashOfConfig":"10"},{"size":6263,"mtime":1607080012024,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qg86ud",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\reportWebVitals.js",[],"C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\App.js",[],"C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\calendar\\day1.js",[],"C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\calendar\\day2.js",["36","37","38"],"import React from \"react\";\r\nimport textInput from \"./day2-input.txt\";\r\nimport {getInput} from \"../util\";\r\n\r\nlet output2 = \"day2\";\r\n\r\nconst transform = (arr) => {\r\n    let transformed = [];\r\n    arr.map(item => {\r\n        let split = item.split(\" \");\r\n        let range = split[0].split(\"-\")\r\n        let obj = {\r\n            min: range[0],\r\n            max: range[1],\r\n            letter: split[1].charAt(0),\r\n            password: split[2]\r\n        }\r\n        transformed.push(obj);\r\n    })\r\n    return transformed;\r\n};\r\n\r\nconst checkString = (min, max, letter, password) => {\r\n    let re = new RegExp(letter, \"g\");\r\n    let count = (password.match(re) || []).length;\r\n    if (count >= min && count <= max) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nconst checkString2 = (posA, posB, letter, password) => {\r\n    let returnBool = false;\r\n    let A = false;\r\n    let B = false;\r\n    if (password.charAt(posA-1) === letter) {\r\n        A = true;\r\n        returnBool = true;\r\n    }\r\n    if (password.charAt(posB-1) === letter) {\r\n        B = true;\r\n        returnBool = true;\r\n    }\r\n    if (A === true && B === true) {\r\n        returnBool = false;\r\n    }\r\n    \r\n\r\n\r\n    return returnBool;\r\n}\r\n\r\n\r\nconst buildList = (arr) => {\r\n    let finalArr = [];\r\n    arr.map(objItem => {\r\n        if (checkString2(objItem.min, objItem.max, objItem.letter, objItem.password) === true) {\r\n            finalArr.push(objItem.password)\r\n        }\r\n    })\r\n    return finalArr;\r\n}\r\n\r\n\r\n\r\n\r\nconst dayTwoOutput = async () => {\r\n    let tempArray = await getInput(textInput);\r\n    let tempTransform = transform(tempArray);\r\n\r\n    output2 = buildList(tempTransform);\r\n    console.log(\"answer:\", output2);\r\n};\r\n\r\nconst DayTwo = () => {\r\n\r\n    return (\r\n        <button \r\n            className=\"wed wk1\"\r\n            onClick={()=>dayTwoOutput()}\r\n        >\r\n            day two\r\n        </button>\r\n    )\r\n}\r\nexport default DayTwo;","C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\util.js",[],"C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\index.js",[],["39","40"],"C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\calendar\\day3.js",["41","42"],"C:\\Users\\cpngu\\Documents\\github\\advent-of-code-2020\\src\\calendar\\day4.js",["43","44","45","46","47","48"],{"ruleId":"49","severity":1,"message":"50","line":9,"column":18,"nodeType":"51","messageId":"52","endLine":9,"endColumn":20},{"ruleId":"53","severity":1,"message":"54","line":23,"column":7,"nodeType":"55","messageId":"56","endLine":23,"endColumn":18},{"ruleId":"49","severity":1,"message":"50","line":56,"column":21,"nodeType":"51","messageId":"52","endLine":56,"endColumn":23},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"53","severity":1,"message":"61","line":12,"column":7,"nodeType":"55","messageId":"56","endLine":12,"endColumn":13},{"ruleId":"49","severity":1,"message":"50","line":58,"column":23,"nodeType":"51","messageId":"52","endLine":58,"endColumn":25},{"ruleId":"53","severity":1,"message":"62","line":7,"column":5,"nodeType":"55","messageId":"56","endLine":7,"endColumn":15},{"ruleId":"49","severity":1,"message":"50","line":29,"column":32,"nodeType":"51","messageId":"52","endLine":29,"endColumn":34},{"ruleId":"49","severity":1,"message":"50","line":41,"column":24,"nodeType":"51","messageId":"52","endLine":41,"endColumn":26},{"ruleId":"49","severity":1,"message":"50","line":43,"column":33,"nodeType":"51","messageId":"52","endLine":43,"endColumn":35},{"ruleId":"49","severity":1,"message":"50","line":53,"column":22,"nodeType":"51","messageId":"52","endLine":53,"endColumn":24},{"ruleId":"49","severity":1,"message":"50","line":109,"column":28,"nodeType":"51","messageId":"52","endLine":109,"endColumn":30},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'checkString' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["63"],"no-negated-in-lhs",["64"],"'sample' is assigned a value but never used.","'testSample' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]